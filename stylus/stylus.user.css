/* ==UserStyle==
@name        stylus -> jcklpe
@namespace   https://github.com/jcklpe/Configs/tree/master/user-styles
@version      1.0.1
@license      GPLv3
@preprocessor default
@var color link-color "Link Color" red
==/UserStyle== */

@document regexp("moz-extension:\/\/.*"),
regexp("chrome-extension:\/\/.*") {

    /*Main color variables*/
    :root {
        /*User colors*/
        --main-color: #00ADEE;
        --main-background: #2d2932;
        --second-background: #2d2932;
        --hover-background: #2d2932;
        --main-text: #EFF0F1;
        --dimmer-text: #CCCCCC;
        --editor-background: #3c3038;
        /*Selection/current line background*/
        --select-background: #232323;

        /*CodeMirror font size*/
        --font-size: 18px;
        --line-height: 1.7;
        /*Cursor width and color*/
        --cursor-width: 2px;
        --cursor-color: #e9f56f;

        /*These are must have static colors*/
        /*Disable all color/warning Breeze Dark*/
        --warning-disable-all: #ac2a32;
        /*No match regex color from Breeze Dark*/
        --no-match: #FDBC4B;
        /*Shadow*/
        --shadow: 0 1px 0.5px rgba(0, 0, 0, 0.13);
        /*Odd entry background*/
        --odd-entry-background: rgba(0, 0, 0, .16);




    }

    html {
        text-rendering: optimizeLegibility !important;
        -webkit-font-smoothing: antialiased !important;
        font-size: 18px !important;
    }

    body {
        font-size: 16px !important;
        line-height: 1.4 !important;
    }

    html.newUI .entry.odd,
    .keymap-list>tbody>tr:nth-child(odd),
    .entry.odd {
        background-color: var(--odd-entry-background) !important;
    }

    #hotkey-info mark {
        background: var(--main-background) !important;
        border: 1px solid var(--main-color) !important;
        color: var(--main-text) !important;
    }

    #hotkey-info[data-active],
    #hotkey-info>div {
        background: var(--main-background) !important;
        border: 1px solid var(--second-background) !important;
    }

    #stylus-edit,
    body,
    html,
    #notes,
    #header,
    .CodeMirror,
    #actions {
        background-color: var(--main-background) !important;
        color: var(--dimmer-text) !important;
    }

    a,
    a:visited,
    .style-name-link {
        color: var(--main-color) !important;
        opacity: .9;
    }

    /* fix tab navigation hovering */
    a:hover,
    .style-name-link:hover,
    a:focus-within,
    .style-name-link:focus-within,
    h2:focus-within .style-name-link,
    .entry:hover .style-name-link {
        opacity: 1;
        filter: brightness(110%) !important;
    }

    .disabled h2:after,
    .search-result,
    .search-result-meta,
    .entry.usercss .style-name-link:after {
        background-color: var(--hover-background) !important;
        box-shadow: var(--shadow) !important;
    }

    .entry.usercss .style-name-link:after {
        color: var(--main-color) !important;
    }

    /* fix tab naviagation hovering */
    .disabled h2:focus-within .style-name-link,
    .entry.disabled:hover .style-name-link {
        opacity: .8;
    }

    #filters label:hover,
    #filters .filter-selection:hover,
    #filters label:hover select,
    #filters .filter-selection:hover select {
        background-color: transparent !important;
        color: var(--main-color) !important;
    }

    #filters label:hover .svg-icon.select-arrow,
    #filters .filter-selection:hover .svg-icon.select-arrow {
        fill: var(--main-color) !important;
    }

    select,
    .svg-icon.select-arrow {
        transition: none !important;
    }

    .entry {
        border: 1px solid var(--second-background) !important;
        box-shadow: inset 0 1px 0 0 var(--second-background) !important;
    }

    .newUI .entry .style-name:hover:before {
        filter: grayscale(1);
    }

    #header {
        width: 282px !important;
    }

    #header {
        border-right: 1px solid var(--hover-background) !important;
    }

    #header h1 {
        color: var(--main-text) !important;
    }

    #header summary:hover h2,
    #header summary h2:hover {
        color: var(--main-color) !important;
    }

    #linter-label {
        white-space: nowrap !important;
    }

    .resize-grip {
        background-color: var(--hover-background) !important;
        border-color: var(--main-background) !important;
    }

    .CodeMirror {
        border-color: var(--odd-entry-background) !important;
    }

    /* Changed text highlight */
    ::selection {
        background: var(--main-color) !important;
        color: var(--main-text) !important;
    }

    ::-moz-selection {
        background: var(--main-color) !important;
        color: var(--main-text) !important;
    }

    ::-webkit-selection {
        background: var(--main-color) !important;
        color: var(--main-text) !important;
    }

    ::placeholder {
        color: var(--dimmer-text) !important;
        opacity: .9;
    }

    ::-webkit-input-placeholder {
        color: var(--dimmer-text) !important;
        opacity: .9;
    }

    ::-moz-placeholder {
        color: var(--dimmer-text) !important;
        opacity: .9;
    }

    /* To be commented out in case you want a stylus theme */
    .CodeMirror-line::-moz-selection,
    .CodeMirror-line>span::-moz-selection,
    .CodeMirror-line>span>span::-moz-selection,
    .CodeMirror-selected,
    .CodeMirror-focused .CodeMirror-selected,
    .CodeMirror-activeline-background {
        background-color: var(--select-background) !important;
    }

    .CodeMirror,
    .CodeMirror-code,
    .CodeMirror-code {
        color: var(--main-text) !important;
        background-color: var(--editor-background) !important;
    }

    .cm-s-mbo.CodeMirror {
        background-color: var(--second-background) !important;
    }

    .CodeMirror-gutters {
        background-color: var(--hover-background) !important;
    }

    /* end of area to be commented out */

    /* dont uncomment anything below */
    .CodeMirror {
        font-family: 'liga-input-sans', 'Menlo', 'Ubuntu Mono', 'Consolas',
            'source-code-pro', monospace !important;
        font-size: var(--font-size) !important;
        line-height: var(--line-height) !important;
    }

    .CodeMirror-lint-tooltip {
        background-color: var(--hover-background) !important;
        color: var(--main-text) !important;
    }

    /* fix the bracket matching actually working */
    div.CodeMirror span.CodeMirror-matchingbracket {
        color: var(--main-color) !important;
        -webkit-text-fill-color: var(--main-color) !important;
        font-weight: 900 !important;
        outline: none !important;
    }

    div.CodeMirror span.CodeMirror-nonmatchingbracket {
        color: var(--warning-disable-all) !important;
        -webkit-text-fill-color: var(--warning-disable-all) !important;
        font-weight: 900 !important;
    }

    /* Cursor width and color setting implementation */
    .CodeMirror div.CodeMirror-cursor {
        border-left-width: var(--cursor-width) !important;
        border-color: var(--cursor-color) !important;
    }

    /* Popup */
    .main-controls,
    .entry,
    .firefox body,
    #help-popup .title {
        background-color: var(--main-background) !important;
    }

    #help-popup {
        background-color: var(--second-background) !important;
    }

    #confirm>div {
        background-color: var(--second-background) !important;
        border-color: var(--hover-background) !important;
    }

    /* Icons */
    .svg-icon,
    .svg-icon.info,
    .newUI .entry .svg-icon {
        fill: var(--main-text) !important;
    }

    .svg-icon.info:hover,
    .svg-icon:hover,
    a:hover .svg-icon,
    .newUI .entry:hover .svg-icon:hover {
        fill: var(--main-color) !important;
    }

    .newUI .can-update[data-details$="locally edited"] .update svg,
    .newUI .update-problem .check-update svg {
        fill: var(--warning-disable-all) !important;
    }

    /* these entries works as intended */
    .newUI .entry.can-update[data-error="may be locally edited"] .update:after,
    .newUI .entry[data-error="locally edited"] .update:after {
        background: var(--second-background) !important;
        border-color: var(--warning-disable-all) !important;
        color: var(--warning-disable-all) !important;
    }

    .newUI .no-update:not(.update-problem):not(.update-done) .up-to-date:after,
    .newUI .update:not(.update-problem) .update-done .up-to-date:after,
    .newUI .entry .updated[title="Update completed."]:after,
    .newUI .entry .update[title="Install update"]:after {
        background-color: var(--second-background) !important;
        border-color: var(--main-color) !important;
        color: var(--main-color) !important;
    }

    /* History */
    #message-box-title,
    #message-box-buttons {
        background-color: var(--hover-background) !important;
        box-shadow: var(--shadow) !important;
    }

    #message-box-contents {
        background-color: var(--second-background) !important;
    }

    #message-box-close-icon .svg-icon {
        fill: var(--dimmer-text) !important;
    }

    #message-box-close-icon:hover .svg-icon {
        fill: var(--main-color) !important;
    }

    .help-text mark {
        background: var(--hover-background) !important;
        border: 1px solid var(--odd-entry-background) !important;
    }

    /* Update warning */
    .newUI .updater-icons> :not(.check-update):after {
        background-color: var(--hover-background) !important;
        border-color: var(--hover-background) !important;
    }

    /* Install warning */
    .warnings {
        background-color: var(--hover-background) !important;
        border-color: var(--hover-background) !important;
    }

    #filters.active,
    .active #filters-stats {
        background-color: var(--main-color) !important;
        border-color: var(--main-color) !important;
    }

    body.all-styles-hidden-by-filters:before,
    body.all-styles-hidden-by-filters:after {
        color: var(--main-color) !important;
        opacity: .5;
    }

    /* List of matching opened tabs */
    .regexp-report details[data-type="full"] {
        color: var(--main-color) !important;
    }

    .regexp-report details[data-type="none"] {
        color: var(--no-match) !important;
    }

    .regexp-report details[data-type="invalid"] {
        color: var(--warning-disable-all) !important;
    }

    /* Text fields */
    #name,
    .applies-to li .applies-value,
    #search,
    .keymap-list input,
    .config-value,
    #sort-select,
    .sorter-selection select,
    body#stylus-options #message-box input {
        background-color: var(--hover-background) !important;
        border: 1px solid var(--hover-background) !important;
    }

    input:not([type]),
    #search,
    #sort-select,
    .sorter-selection select,
    body#stylus-options #message-box input {
        color: var(--main-text) !important;
    }

    #name:hover,
    .applies-to li .applies-value:hover,
    #search:hover,
    .keymap-list input:hover,
    #name:active,
    .applies-to li .applies-value:active,
    #search:active,
    .keymap-list input:active,
    #name:focus,
    .applies-to li .applies-value:focus,
    #search:focus,
    .keymap-list input:focus,
    body#stylus-options #message-box input:not(:invalid):focus {
        border: 1px solid var(--main-color) !important;
    }

    /* Stylus popup fixes
	 * Use opacity to solve disabled entries see #18 thx Mottie :) */
    #stylus-popup .disabled .style-name {
        opacity: .7;
    }

    /* Revert opacity here else the hover will also be dimmer. */
    #stylus-popup .entry:hover .style-name,
    #stylus-popup .disabled:hover .style-name {
        color: var(--main-text) !important;
        opacity: 1;
    }

    #stylus-popup #installed .entry:nth-child(even) .main-controls,
    #stylus-popup #installed .entry:nth-child(even) {
        background-color: var(--odd-entry-background) !important;
    }

    /* Thx Mottie for solution see #18 */
    #installed .entry.disabled:focus-within .style-name,
    #installed .entry:focus-within .style-name {
        color: var(--main-text) !important;
    }

    /* fix: dont allow UserCSS option names to wrap */
    .config-name {
        white-space: nowrap !important;
    }

    /* editor line tweak */
    #sections>div:not(:first-of-type) {
        border-top: 2px solid var(--second-background) !important;
    }

    /* Buttons */
    button {
        transition: color .25s, border-color .25s;
    }

    #save-button,
    #beautify,
    #cancel-button,
    #from-mozilla,
    #to-mozilla,
    #editor\.keyMap,
    #editor\.theme,
    #editor\.matchHighlight,
    #editor\.tabSize,
    .applies-type.style-contributor,
    .add-section,
    .beautify-section,
    .test-regexp,
    .remove-applies-to,
    .add-applies-to,
    #check-all-updates,
    #add-style-label,
    #manage-options-button,
    button,
    #file-all-styles,
    #unfile-all-styles,
    #manage\.newUI\.targets,
    #badgeNormal,
    #badgeDisabled,
    #updateInterval,
    #popupWidth,
    #editor\.linter,
    #options button,
    #manage\.newUI\.sort {
        background: var(--second-background) !important;
        color: var(--main-text) !important;
        border: 1px solid var(--hover-background) !important;
        box-shadow: var(--shadow) !important;
    }

    #save-button:hover,
    #beautify:hover,
    #cancel-button:hover,
    #from-mozilla:hover,
    #to-mozilla:hover,
    #editor\.keyMap:hover,
    #editor\.theme:hover,
    #editor\.matchHighlight:hover,
    #editor\.tabSize:hover,
    .applies-type.style-contributor:hover,
    .add-section:hover,
    .beautify-section:hover,
    .test-regexp:hover,
    .remove-applies-to:hover,
    .add-applies-to:hover,
    option:hover,
    #check-all-updates:hover,
    #add-style-label:hover,
    #manage-options-button:hover,
    button:hover,
    #file-all-styles:hover,
    #unfile-all-styles:hover,
    #manage\.newUI\.targets:hover,
    #updateInterval:hover,
    #popupWidth:hover,
    #editor\.linter:hover,
    #options button:hover,
    #manage\.newUI\.sort:hover {
        color: var(--main-color) !important;
        border: 1px solid var(--main-color) !important;
    }

    #options button {
        background-image: none !important;
        text-shadow: none !important;
    }

    optgroup {
        background: var(--main-background) !important;
        color: var(--main-color) !important;
    }

    option {
        background: var(--second-background) !important;
        color: var(--main-text) !important;
    }

    #stylus button[disabled] {
        opacity: .4;
    }

    #stylus button[disabled]:hover {
        color: var(--main-text) !important;
    }

    /* Search
	 * Fixed search including replace and match highlight */
    #search-replace-dialog .CodeMirror-search-field,
    #search-replace-dialog [data-action="clear"] {
        background: var(--second-background);
    }

    .cm-searching {
        background-color: var(--warning-disable-all);
        color: var(--main-text);
    }

    .cm-searching.cm-matchhighlight {
        /* tokens found by manual search should not animate by cm-matchhighlight */
        animation-name: search-and-match-highlighter;
    }

    @keyframes search-and-match-highlighter {
        from {
            background-color: var(--warning-disable-all);
            /* search color */
            color: var(--main-text);
        }

        to {
            background-color: var(--dimmer-text);
            /* search + highlight */
            color: var(--main-background);
        }
    }

    /* .CodeMirror-search selector doesnt exist in Stylus source so, be gone */
    .CodeMirror-search-match {
        background: var(--main-color) !important;
        border-top: 1px solid var(--no-match) !important;
        border-bottom: 1px solid var(--no-match) !important;
        opacity: 1;
    }

    #stylus .search-target-match {
        background-color: var(--no-match) !important;
        color: var(--main-background) !important;
    }

    .CodeMirror-dialog,
    .CodeMirror-dialog input {
        background: var(--hover-background) !important;
        color: var(--main-text) !important;
    }

    .CodeMirror-dialog-top {
        border-color: var(--main-color) !important;
    }

    /* Autocomplete hints */
    .CodeMirror-hints {
        background: var(--main-background) !important;
        box-shadow: var(--shadow) !important;
        border-color: var(--hover-background) !important;
    }

    .CodeMirror-hint {
        color: var(--main-text) !important;
    }

    li.CodeMirror-hint-active {
        background: var(--main-color) !important;
        border-color: var(--main-color) !important;
    }

    li.CodeMirror-hint:hover {
        background: var(--hover-background) !important;
        color: var(--main-color) !important;
    }

    /* Default theme overwritten with adjusted colors */
    .cm-s-default.CodeMirror {
        background: var(--second-background);
        color: var(--main-text);
    }

    .cm-s-default div.CodeMirror-selected {
        background: var(--select-background);
    }

    .cm-s-default .CodeMirror-line::selection,
    .cm-s-default .CodeMirror-line>span::selection,
    .cm-s-default .CodeMirror-line>span>span::selection {
        background: var(--select-background);
    }

    .cm-s-default .CodeMirror-line::-moz-selection,
    .cm-s-default .CodeMirror-line>span::-moz-selection,
    .cm-s-default .CodeMirror-line>span>span::-moz-selection {
        background-color: var(--select-background);
    }

    .cm-s-default .CodeMirror-gutters {
        background: var(--hover-background);
        border-right: 0px;
    }

    .cm-s-default .CodeMirror-guttermarker {
        color: var(--main-text);
    }

    .cm-s-default .CodeMirror-guttermarker-subtle,
    .cm-s-default .CodeMirror-linenumber {
        color: var(--dimmer-text);
    }

    .cm-s-default .CodeMirror-cursor {
        border-left: var(--cursor-width) solid var(--cursor-color);
    }

    .cm-s-default span.cm-comment {
        color: var(--dimmer-text);
    }

    .cm-s-default span.cm-atom,
    .cm-s-default span.cm-number {
        color: var(--main-color);
        opacity: .6;
    }

    .cm-s-default span.cm-property,
    .cm-s-default span.cm-attribute {
        color: var(--main-color);
        opacity: 1;
    }

    .cm-s-default span.cm-keyword,
    .cm-s-default span.cm-string {
        color: var(--main-color);
    }

    .cm-s-default span.cm-string.cm-property {
        color: var(--main-text);
    }

    .cm-s-default span.cm-variable {
        color: var(--main-text);
    }

    .cm-s-default span.cm-variable-2 {
        color: var(--main-color);
        opacity: .6;
    }

    .cm-s-default .cm-variable-3,
    .cm-s-default .cm-type {
        color: var(--main-color);
        filter: hue-rotate(280deg);
    }

    .cm-s-default span.cm-def {
        color: var(--main-text);
    }

    .cm-s-default span.cm-bracket {
        color: var(--main-text);
        font-weight: bold;
    }

    .cm-s-default span.cm-tag {
        color: var(--main-color);
        opacity: .6;
    }

    .cm-s-default span.cm-link,
    .cm-s-default span.cm-keyword {
        color: var(--main-color);
    }

    .cm-s-default span.cm-keyword:not(.cm-colorview),
    .cm-s-default span.cm-string {
        color: var(--main-color);
        filter: hue-rotate(60deg);
    }

    .cm-s-default span.cm-link,
    .cm-s-default span.cm-keyword:not(.cm-colorview) {
        color: var(--main-color);
        filter: invert(100%);
    }

    .cm-s-default span.cm-error {
        border-bottom: var(--hover-background);
        color: var(--main-text);
    }

    .cm-s-default span.cm-qualifier {
        color: var(--main-text);
    }

    .cm-s-default span.cm-keyword.colorview:after {
        filter: invert(100%);
    }

    .cm-s-default .CodeMirror-activeline-background {
        background: var(--select-background);
    }

    .cm-s-default .CodeMirror-matchingbracket {
        color: var(--main-color);
    }

    .cm-s-default .CodeMirror-matchingtag {
        background: var(--dimmer-text);
    }

    .cm-s-default .cm-builtin {
        color: var(--main-color);
    }

    .cm-s-default .cm-meta {
        color: var(--dimmer-text);
    }

    /* Stylish in chrome specific */
    :focus {
        outline-color: var(--main-color);
    }

    /* fix: Stylus remove that unsightly white border in input */
    body:not(#stylus-options) input {
        background-color: var(--second-background);
        border: 1px solid var(--hover-background);
        color: var(--main-text);
    }

    fieldset,
    [style-id],
    .disabled {
        border-color: var(--hover-background);
    }

    .CodeMirror.cm-s-default.CodeMirror-wrap.CodeMirror-active {
        outline-color: var(--main-color);
    }

    /* Stylus in chrome specific */
    #manage\.onlyEnabled\.invert,
    #manage\.onlyLocal\.invert,
    #manage\.onlyUsercss\.invert {
        color: var(--dimmer-text);
        box-shadow: var(--shadow) !important;
    }

    #advanced.collapsible h1 {
        color: var(--main-text) !important;
    }

    #advanced.collapsible h1:hover {
        color: var(--main-color) !important;
    }

    .block {
        border-color: var(--hover-background) !important;
    }

    /* Install *.user.css page */
    .CodeMirror-linewidget .applies-to {
        background-color: var(--second-background) !important;
        border-color: var(--hover-background) !important;
    }

    .applies-type {
        background-color: var(--hover-background) !important;
        color: var(--main-text) !important;
        border: 1px solid var(--hover-background) !important;
    }

    .applies-type:hover {
        color: var(--main-color) !important;
    }

    .config-dialog label {
        border-color: var(--hover-background) !important;
    }

    .config-dialog select,
    .beautify-options select {
        background-color: var(--hover-background) !important;
        color: var(--main-text) !important;
        border: 1px solid var(--hover-background) !important;
    }

    .config-dialog select:hover,
    .beautify-options select:hover {
        color: var(--main-color) !important;
    }

    /* userCSS button */
    .install.reinstall {
        background: var(--hover-background) !important;
    }

    .header {
        border-color: var(--hover-background) !important;
    }

    /* fix wrong background color when CodeMirror is empty */
    .CodeMirror-focused {
        outline-color: var(--main-color) !important;
    }

    /* Checkboxes */
    input[type="checkbox"],
    input[type="checkbox"]:not(.slider) {
        border-color: var(--hover-background) !important;
        box-shadow: var(--shadow) !important;
    }

    input[type="checkbox"]:hover,
    input[type="checkbox"]:not(.slider):hover,
    .filter-selection:hover input[type="checkbox"] {
        border-color: var(--main-color) !important;
    }

    input[type="checkbox"]:checked:not(.slider)+.svg-icon.checked,
    svg[class="svg-icon checked"] {
        fill: var(--main-color) !important;
    }

    /* fixes the popup checkbox hover */
    .style-name:hover input[type="checkbox"]:not(.slider),
    .disabled .style-name:hover input[type="checkbox"]:not(.slider) {
        border-color: var(--main-color) !important;
    }

    /* This fixes the misalignment between:
	 * [ ] Turn all styles off checkbox and label */
    #disableAll {
        margin-top: 2px !important;
    }

    /* This fixes the disable all checkbox bg being too bright on hover	*/
    #disableAll:hover {
        border-color: var(--warning-disable-all) !important;
        background-color: var(--second-background) !important;
    }

    #disableAll-label:hover {
        color: var(--warning-disable-all) !important;
    }

    /* Colorpicker
	 * This prevents the format change arrow from being cut off to the right,
	 * and in addition when hovering/focus we get the nice --main-color. */
    .colorpicker-format-change {
        top: 3px;
        right: -1px;
        padding-right: 2px;
    }

    .colorpicker-format-change-button:hover {
        color: var(--main-color) !important;
    }

    .colorpicker-input:hover,
    .colorpicker-input:focus {
        border-color: var(--main-color) !important;
    }

    /* forked from theme made by RaitaroH and https://github.com/RaitaroH/Stylus-DeepDark/graphs/contributors */

}